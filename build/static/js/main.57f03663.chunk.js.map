{"version":3,"sources":["App.js","index.js"],"names":["Box","props","className","children","Card","title","RevenueCard","style","fontSize","stat","PieChart","pieData","color","margins","top","left","dimension","bottom","right","height","width","position","data","colors","margin","innerRadius","enableRadialLabels","enableSlicesLabels","isInteractive","display","flexDirection","alignItems","justifyContent","textAlign","value","BarChart","dimensions","minHeight","minWidth","console","log","keys","indexBy","padding","layout","axisBottom","tickSize","tickPadding","legend","legendPosition","legendOffset","axisLeft","enableGridX","enableGridY","enableLabel","BubbleChart","root","identity","scheme","isZoomable","leavesOnly","DynamicBoxes","response","truthValue","Object","length","constructor","Revenues","AM","toFixed","EB","ET","total","Rates","purchase","checkout","abandoned","OrdersByStore","OrdersByRegion","nw","sw","c","se","ne","href","OptionList","App","useState","setResponse","query","setQuery","useEffect","a","axios","getData","id","onChange","event","valueArray","target","split","requestUrl","baseUrl","autocomplete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57f03663.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './App.css';\n\nimport { ResponsivePie } from '@nivo/pie'\nimport { ResponsiveBar } from '@nivo/bar'\nimport { ResponsiveBubble } from '@nivo/circle-packing'\n\nimport axios from 'axios'\n\nconst Box = (props) => {\n  return (\n    <div className=\"flexbox\">\n      {props.children}\n    </div>\n  )\n}\n\nconst Card = (props) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-title center top-margin\">{props.title}</div>\n      {props.children}\n    </div>\n  )\n}\n\nconst RevenueCard = (props) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-title center\">{props.title}</div>\n      <div className=\"card-stat center\"><span style={{ fontSize: '1.5rem' }}>$ </span>{props.stat}k</div>\n    </div>\n  )\n}\n\nconst PieChart = (props) => {\n  const pieData = [\n    {\n      \"id\": props.title,\n      \"label\": props.title,\n      \"value\": props.stat,\n      \"color\": props.color\n    },\n    {\n      \"id\": \"empty\",\n      \"label\": \"empty\",\n      \"value\": 100 - props.stat,\n      \"color\": \"hsl(217, 33%, 14%)\"\n    }\n  ]\n\n  const dimension = 300\n  const margins = { top: 0, left: dimension * 0.8 / 3, bottom: 0, right: dimension * 0.8 / 3 }\n  return (\n    <div className=\"card\">\n      <div className=\"card-title center top-margin\">{props.title}</div>\n      <div className=\"piebox\">\n        <div style={{\n          height: dimension,\n          width: dimension,\n          position: \"relative\"\n        }}>\n          <ResponsivePie\n            data={pieData}\n            colors={pieData => pieData.color}\n            margin={margins}\n            innerRadius={0.5}\n            enableRadialLabels={false}\n            enableSlicesLabels={false}\n            isInteractive={false}\n            style={{\n              display: 'flex',\n            }}\n          />\n          <div style={{\n            position: \"absolute\",\n            top: '0',\n            bottom: '0',\n            right: dimension / 2,\n            left: dimension / 2,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            textAlign: \"center\"\n          }}>\n            <span>{pieData[0].value}%</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst BarChart = ({ data }) => {\n  const dimension = 300\n  const margins = { top: dimension * 0.8 / 3, left: dimension * 0.8 / 3, bottom: dimension * 0.8 / 3, right: dimension * 0.8 / 3 }\n  const dimensions = { height: '40vh', width: '45vw' }\n  return (\n    <div style={{ height: dimensions.height, width: dimensions.width, minHeight: 300, minWidth: 250 }} className=\"trickyChart\">\n      {console.log(dimensions.height)}\n      <ResponsiveBar\n        colors=\"hsl(216, 54%, 49%)\"\n        data={data}\n        keys={['value']}\n        indexBy=\"store\"\n        margin={margins}\n        padding={0.3}\n        layout=\"horizontal\"\n        axisBottom={{\n          tickSize: 5,\n          tickPadding: 5,\n          legend: 'Orders',\n          legendPosition: 'middle',\n          legendOffset: 50\n        }}\n        axisLeft={{\n          tickSize: 10,\n          tickPadding: 5\n        }}\n        enableGridX={true}\n        enableGridY={false}\n        enableLabel={false}\n        isInteractive={false}\n\n      />\n    </div>\n  )\n}\n\nconst BubbleChart = ({ data }) => {\n  const dimensions = { height: '40vh', width: '45vw' }\n  return (\n    <div style={{ height: dimensions.height, width: dimensions.width, minHeight: 300, minWidth: 250 }} className=\"trickyChart\">\n      <ResponsiveBubble\n        root={data}\n        margin={{ top: 20, right: 0, bottom: 20, left: 0 }}\n        identity=\"name\"\n        value=\"loc\"\n        colors={{ scheme: 'spectral' }}\n        padding={9}\n        enableLabel={true}\n        isZoomable={false}\n        leavesOnly={true}\n        isInteractive={false}\n        className=\"trickyChart\"\n      />\n    </div>\n  )\n}\n\nconst DynamicBoxes = ({ response }) => {\n\n  console.log(\"loading dynamic boxes\")\n  console.log(\"checking response received in component:\")\n  console.log(response)\n\n  const truthValue = Object.keys(response).length === 0 && response.constructor === Object ? false : true\n\n  console.log(\"truthValue\")\n  console.log(truthValue)\n\n\n  return !truthValue ? (\n    <>\n      <div className=\"loading\">\n        \n        <p>\n        Loading...<br /><br />\n        See, the thing is: the backend server is down on Heroku.<br />\n        You could try refreshing the page.<br /><br />\n        If it still doesn't load then I've crossed my Heroku usage limit.<br /><br />\n        But...<br /><br />\n        You can check out the code for this repository here :<br /><br />\n        <a href=\"\">Frontend</a>&nbsp;&nbsp;&nbsp;\n        <a href=\"\">Backend</a>\n      </p>\n      </div>\n      \n    </>\n  ) : (\n      <>\n        <Box>\n          <RevenueCard title=\"Revenue from Amazon\" stat={(response.Revenues.AM / 1000).toFixed(2)} />\n          <RevenueCard title=\"Revenue from Ebay\" stat={(response.Revenues.EB / 1000).toFixed(2)} />\n          <RevenueCard title=\"Revenue from Etsy\" stat={(response.Revenues.ET / 1000).toFixed(2)} />\n          <RevenueCard title=\"Total Revenue\" stat={(response.Revenues.total / 1000).toFixed(2)} />\n        </Box>\n        <Box>\n          <PieChart title=\"Purchase Rate\" stat={response.Rates.purchase} color=\"hsl(216, 54%, 49%)\" />\n          <PieChart title=\"Checkout Rate\" stat={response.Rates.checkout} color=\"hsl(186, 53%, 51%)\" />\n          <PieChart title=\"Cart Abandon Rate\" stat={response.Rates.abandoned} color=\"hsl(69, 83%, 84%)\" />\n        </Box>\n        <Box>\n          <Card title=\"Orders Trend by Stores\">\n            <BarChart data={\n              [\n                {\n                  \"store\": \"Etsy\",\n                  \"value\": response.OrdersByStore.ET\n                },\n                {\n                  \"store\": \"Ebay\",\n                  \"value\": response.OrdersByStore.EB\n                },\n                {\n                  \"store\": \"Amazon\",\n                  \"value\": response.OrdersByStore.AM\n                }\n              ]\n            } />\n          </Card>\n          </Box>\n          <Box>\n          <Card title=\"Orders Trend by Region\">\n            <BubbleChart data={\n              {\n                \"name\": \"chart\",\n                \"children\": [\n                  {\n                    \"name\": \"NW\",\n                    \"loc\": response.OrdersByRegion.nw\n                  },\n                  {\n                    \"name\": \"SW\",\n                    \"loc\": response.OrdersByRegion.sw\n                  },\n                  {\n                    \"name\": \"CR\",\n                    \"loc\": response.OrdersByRegion.c\n                  },\n                  {\n                    \"name\": \"SE\",\n                    \"loc\": response.OrdersByRegion.se\n                  },\n                  {\n                    \"name\": \"NE\",\n                    \"loc\": response.OrdersByRegion.ne\n                  }\n                ]\n              }\n            } />\n          </Card>\n        </Box>\n      </>\n    )\n}\nconst OptionList = () => {\n  // Note: Change this to a mapped array using array map method.\n  return (\n    <>\n      <option value=\"Jan 2019\">Jan 2019</option>\n      <option value=\"Dec 2018\">Dec 2018</option>\n      <option value=\"Nov 2018\">Nov 2018</option>\n      <option value=\"Oct 2018\">Oct 2018</option>\n      <option value=\"Sep 2018\">Sep 2018</option>\n      <option value=\"Aug 2018\">Aug 2018</option>\n      <option value=\"Jul 2018\">Jul 2018</option>\n      <option value=\"Jun 2018\">Jun 2018</option>\n      <option value=\"May 2018\">May 2018</option>\n      <option value=\"Apr 2018\">Apr 2018</option>\n      <option value=\"Mar 2018\">Mar 2018</option>\n      <option value=\"Feb 2018\">Feb 2018</option>\n      <option value=\"Jan 2018\">Jan 2018</option>\n    </>\n  )\n}\nconst App = () => {\n  const baseUrl = 'https://sales-dashboard-react.herokuapp.com/db/'\n  // const baseUrl = 'http://localhost:3001/db'\n  const initialQuery = 'https://sales-dashboard-react.herokuapp.com/db/2019/Jan'\n  // const initialQuery = 'http://localhost:3001/db/2019/Jan'\n\n  const [response, setResponse] = useState({})\n  const [query, setQuery] = useState(initialQuery)\n\n  const handleChange = (event) => {\n\n    console.log(\"event received\")\n\n    const valueArray = event.target.value.split(\" \")\n    const requestUrl = baseUrl + \"/\" + valueArray[1] + \"/\" + valueArray[0]\n\n    console.log(\"setting query\")\n    console.log(requestUrl)\n\n    setQuery(requestUrl)\n  }\n\n  const hook = () => {\n    const getData = async () => {\n      console.log(\"the effect is being used\")\n      console.log(\"received query as:\")\n      console.log(query)\n      console.log(\"fetching data now...\")\n\n      try {\n        const { data } = await axios(query)\n\n        console.log(\"got data as:\")\n        console.log(data)\n        console.log(\"setting response\")\n\n        setResponse(data)\n      }\n      catch {\n        setResponse({})\n      }\n    }\n\n    getData()\n  }\n  // see : https://daveceddia.com/useeffect-hook-examples/ under Prevent useEffect From Running Every Render\n  // You can provide a second argument – an array of values. Think of them as the dependencies for that effect.\n  // If one of the dependencies has changed since the last time, the effect will run again.\n  // (It will also still run after the initial render)\n  // From FullStackOpen:\n  // The second parameter of useEffect is used to specify how often the effect is run.\n  // If the second parameter is an empty array [],\n  // then the effect is only run along with the first render of the component.\n\n  useEffect(hook, [query])\n\n  return (\n    <>\n      <nav>\n        <span>\n          <select id=\"month\" onChange={handleChange} autocomplete>\n            <OptionList />\n          </select>\n        </span>\n        <span>Sales Summary</span>\n        <span>Hey, you!</span>\n      </nav>\n      <DynamicBoxes response={response} />\n    </>\n  )\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"circular-std\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}