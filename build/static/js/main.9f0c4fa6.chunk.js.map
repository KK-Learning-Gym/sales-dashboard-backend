{"version":3,"sources":["config.js","components/PieChart.js","components/BarChart.js","components/BubbleChart.js","components/Failed.js","App.js","index.js"],"names":["require","config","module","exports","baseUrl","initialQuery","PieChart","props","pieData","title","stat","color","margins","top","left","dimension","bottom","right","className","style","height","width","position","data","colors","margin","innerRadius","enableRadialLabels","enableSlicesLabels","isInteractive","display","flexDirection","alignItems","justifyContent","textAlign","value","BarChart","dimensions","minHeight","minWidth","keys","indexBy","padding","layout","axisBottom","tickSize","tickPadding","legend","legendPosition","legendOffset","axisLeft","enableGridX","enableGridY","enableLabel","BubbleChart","root","identity","scheme","isZoomable","leavesOnly","styles","Failed","class","href","Box","children","Card","RevenueCard","fontSize","Loading","DynamicBoxes","response","page","console","log","truthValue","Object","length","constructor","Revenues","AM","toFixed","EB","ET","total","Rates","purchase","checkout","abandoned","OrdersByStore","OrdersByRegion","nw","sw","c","se","ne","App","useState","setResponse","query","setQuery","setPage","useEffect","a","axios","getData","id","onChange","event","valueArray","target","split","requestUrl","autoComplete","map","option","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f0c4fa6.chunk.js","sourcesContent":["require('dotenv').config()\n\nlet baseUrl = 'https://sales-dashboard-react.herokuapp.com/db'\nlet initialQuery = 'https://sales-dashboard-react.herokuapp.com/db/2019/Jan'\n\nif (process.env.NODE_ENV === 'development') {\n    baseUrl = 'http://localhost:3001/db'\n    initialQuery = 'http://localhost:3001/db/2019/Jan'\n}\n\nmodule.exports = {\n  baseUrl,\n  initialQuery\n}","import React from 'react'\nimport { ResponsivePie } from '@nivo/pie'\n\nconst PieChart = (props) => {\n    const pieData = [\n        {\n            \"id\": props.title,\n            \"label\": props.title,\n            \"value\": props.stat,\n            \"color\": props.color\n        },\n        {\n            \"id\": \"empty\",\n            \"label\": \"empty\",\n            \"value\": 100 - props.stat,\n            \"color\": \"hsl(217, 33%, 14%)\"\n        }\n    ]\n\n    const dimension = 300\n    const margins = { top: 0, left: dimension * 0.8 / 3, bottom: 0, right: dimension * 0.8 / 3 }\n    return (\n        <div className=\"card\">\n            <div className=\"card-title center top-margin\">{props.title}</div>\n            <div className=\"piebox\">\n                <div style={{\n                    height: dimension,\n                    width: dimension,\n                    position: \"relative\"\n                }}>\n                    <ResponsivePie\n                        data={pieData}\n                        colors={pieData => pieData.color}\n                        margin={margins}\n                        innerRadius={0.5}\n                        enableRadialLabels={false}\n                        enableSlicesLabels={false}\n                        isInteractive={false}\n                        style={{\n                            display: 'flex',\n                        }}\n                    />\n                    <div style={{\n                        position: \"absolute\",\n                        top: '0',\n                        bottom: '0',\n                        right: dimension / 2,\n                        left: dimension / 2,\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        textAlign: \"center\"\n                    }}>\n                        <span>{pieData[0].value}%</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PieChart","import React from 'react'\nimport { ResponsiveBar } from '@nivo/bar'\n\nconst BarChart = ({ data }) => {\n    const dimension = 300\n    const margins = { top: dimension * 0.8 / 3, left: dimension * 0.8 / 3, bottom: dimension * 0.8 / 3, right: dimension * 0.8 / 3 }\n    const dimensions = { height: '40vh', width: '45vw' }\n    return (\n        <div style={{ height: dimensions.height, width: dimensions.width, minHeight: 300, minWidth: 250 }} className=\"trickyChart\">\n            <ResponsiveBar\n                colors=\"hsl(216, 54%, 49%)\"\n                data={data}\n                keys={['value']}\n                indexBy=\"store\"\n                margin={margins}\n                padding={0.3}\n                layout=\"horizontal\"\n                axisBottom={{\n                    tickSize: 5,\n                    tickPadding: 5,\n                    legend: 'Orders',\n                    legendPosition: 'middle',\n                    legendOffset: 50\n                }}\n                axisLeft={{\n                    tickSize: 10,\n                    tickPadding: 5\n                }}\n                enableGridX={true}\n                enableGridY={false}\n                enableLabel={false}\n                isInteractive={false}\n\n            />\n        </div>\n    )\n}\n\nexport default BarChart","import React from 'react'\nimport { ResponsiveBubble } from '@nivo/circle-packing'\n\nconst BubbleChart = ({ data }) => {\n    const dimensions = { height: '40vh', width: '45vw' }\n    return (\n        <div style={{ height: dimensions.height, width: dimensions.width, minHeight: 300, minWidth: 250 }} className=\"trickyChart\">\n            <ResponsiveBubble\n                root={data}\n                margin={{ top: 20, right: 0, bottom: 20, left: 0 }}\n                identity=\"name\"\n                value=\"loc\"\n                colors={{ scheme: 'spectral' }}\n                padding={9}\n                enableLabel={true}\n                isZoomable={false}\n                leavesOnly={true}\n                isInteractive={false}\n                className=\"trickyChart\"\n            />\n        </div>\n    )\n}\n\nexport default BubbleChart","import React from 'react'\n\nconst styles={\n    'display': 'flex',\n    'flex-direction': 'column',\n    'justify-content': 'center',\n    'align-items': 'center',\n    'height': '90%',\n    'color': 'white',\n}\n\nconst Failed = () => {\n    return (\n        <div style={styles}>\n            <div class=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div><br />\n          <p>\n          The backend hosted on Heroku is not responding.\n          <br /><br />\n          You could try refreshing the page.\n          <br /><br />\n          If it still doesn't load then I've crossed my Heroku usage limit.\n          <br /><br />\n          But...\n          <br /><br />\n          You can check out the code for this repository here :<br /><br />\n                <a href=\"#nowhere\">Frontend</a>\n          &nbsp;&nbsp;&nbsp;\n          <a href=\"#nowhere\">Backend</a>\n          </p>\n        </div>\n    )\n}\n\nexport default Failed","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nimport './App.css'\n\nimport PieChart from './components/PieChart'\nimport BarChart from './components/BarChart'\nimport BubbleChart from './components/BubbleChart'\n\nimport Failed from './components/Failed'\n\nimport { baseUrl, initialQuery } from './config'\n\nconst Box = (props) => {\n  return (\n    <div className=\"flexbox\">\n      {props.children}\n    </div>\n  )\n}\n\nconst Card = (props) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-title center top-margin\">{props.title}</div>\n      {props.children}\n    </div>\n  )\n}\n\nconst RevenueCard = (props) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-title center\">{props.title}</div>\n      <div className=\"card-stat center\"><span style={{ fontSize: '1.5rem' }}>$ </span>{props.stat}k</div>\n    </div>\n  )\n}\n\nconst Loading = () => {\n  return (\n    <>\n      <div className=\"loading\"><div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div></div>\n    </>\n  )\n}\n\nconst DynamicBoxes = ({ response, page }) => {\n\n  console.log(\"loading dynamic boxes\")\n  console.log(\"checking response received in component:\")\n  console.log(response)\n\n  const truthValue = Object.keys(response).length === 0 && response.constructor === Object ? false : true\n\n  console.log(\"truthValue\")\n  console.log(truthValue)\n  if (page === 'loading') {\n    return (\n      <Loading />\n    )\n  }\n  else if (page === 'main' && truthValue) {\n    return (\n      <>\n        <Box>\n          <RevenueCard title=\"Revenue from Amazon\" stat={(response.Revenues.AM / 1000).toFixed(2)} />\n          <RevenueCard title=\"Revenue from Ebay\" stat={(response.Revenues.EB / 1000).toFixed(2)} />\n          <RevenueCard title=\"Revenue from Etsy\" stat={(response.Revenues.ET / 1000).toFixed(2)} />\n          <RevenueCard title=\"Total Revenue\" stat={(response.Revenues.total / 1000).toFixed(2)} />\n        </Box >\n        <Box>\n          <PieChart title=\"Purchase Rate\" stat={response.Rates.purchase} color=\"hsl(216, 54%, 49%)\" />\n          <PieChart title=\"Checkout Rate\" stat={response.Rates.checkout} color=\"hsl(186, 53%, 51%)\" />\n          <PieChart title=\"Cart Abandon Rate\" stat={response.Rates.abandoned} color=\"hsl(69, 83%, 84%)\" />\n        </Box>\n        <Box>\n          <Card title=\"Orders Trend by Stores\">\n            <BarChart data={\n              [\n                {\n                  \"store\": \"Etsy\",\n                  \"value\": response.OrdersByStore.ET\n                },\n                {\n                  \"store\": \"Ebay\",\n                  \"value\": response.OrdersByStore.EB\n                },\n                {\n                  \"store\": \"Amazon\",\n                  \"value\": response.OrdersByStore.AM\n                }\n              ]\n            } />\n          </Card>\n        </Box>\n        <Box>\n          <Card title=\"Orders Trend by Region\">\n            <BubbleChart data={\n              {\n                \"name\": \"chart\",\n                \"children\": [\n                  {\n                    \"name\": \"NW\",\n                    \"loc\": response.OrdersByRegion.nw\n                  },\n                  {\n                    \"name\": \"SW\",\n                    \"loc\": response.OrdersByRegion.sw\n                  },\n                  {\n                    \"name\": \"CR\",\n                    \"loc\": response.OrdersByRegion.c\n                  },\n                  {\n                    \"name\": \"SE\",\n                    \"loc\": response.OrdersByRegion.se\n                  },\n                  {\n                    \"name\": \"NE\",\n                    \"loc\": response.OrdersByRegion.ne\n                  }\n                ]\n              }\n            } />\n          </Card>\n        </Box>\n      </>\n    )\n  }\n  if (page === 'failed') {\n    return (\n      <Failed />\n    )\n  }\n}\n\nconst App = () => {\n\n  const [response, setResponse] = useState({})\n  const [query, setQuery] = useState(initialQuery)\n  const [page, setPage] = useState('loading')\n\n  const handleChange = (event) => {\n\n    console.log(\"event received\")\n\n    const valueArray = event.target.value.split(\" \")\n    const requestUrl = baseUrl + \"/\" + valueArray[1] + \"/\" + valueArray[0]\n\n    console.log(\"setting query\")\n    console.log(requestUrl)\n\n    setQuery(requestUrl)\n  }\n\n  const hook = () => {\n    const getData = async () => {\n      console.log(\"received query as:\")\n      console.log(query)\n      console.log(\"fetching data now...\")\n\n      try {\n        const { data } = await axios(query)\n\n        console.log(\"got data as:\")\n        console.log(data)\n        console.log(\"setting response\")\n\n        setResponse(data)\n        setPage('main')\n      }\n      catch {\n        setResponse({})\n        setPage('failed')\n      }\n    }\n\n    getData()\n  }\n\n  useEffect(hook, [query])\n\n\n  const options = [\"Jan 2019\", \"Dec 2018\", \"Nov 2018\", \"Oct 2018\", \"Sep 2018\", \"Aug 2018\", \"Jul 2018\", \"Jun 2018\", \"May 2018\", \"Apr 2018\", \"Mar 2018\", \"Feb 2018\", \"Jan 2018\"]\n\n  return (\n    <>\n      <nav>\n        <span>\n          <select id=\"month\" onChange={handleChange} autoComplete=\"true\">\n            {options.map((option) => <option key={option} value={option}>{option}</option>)}\n          </select>\n        </span>\n        <span>Sales Summary</span>\n        <span>Hey, you!</span>\n      </nav>\n      <DynamicBoxes response={response} page={page} />\n    </>\n  )\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"circular-std\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}